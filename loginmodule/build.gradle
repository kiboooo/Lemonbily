
if(rootProject.ext.isApplication){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        if(rootProject.ext.isApplication){
            applicationId  rootProject.ext.android.applicationId
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resourcePrefix "login_"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{
        main{
            if(rootProject.ext.isApplication){
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }else{
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java{
                    exclude 'com.example.loginmodule.debug/**'
                }
            }
        }
    }

    //groovy脚本强制修改冲突的依赖库版本号
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation  rootProject.ext.dependencies.supportV7
    implementation  rootProject.ext.dependencies.constraintLayout
    implementation project(":basemodule") // 导入 baseModule
    //引入recyclerView
    implementation rootProject.ext.dependencies.recyclerViewCompiler
    //引入cardView
    implementation rootProject.ext.dependencies.cardViewCompiler
    // arouter-compiler 的注解依赖需要所有使用 ARouter 的 module 都添加依赖
    annotationProcessor rootProject.ext.dependencies.arouterCompiler
    annotationProcessor rootProject.ext.dependencies.evenMsgCompiler

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
